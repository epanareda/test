{"version":3,"file":"js/app.e98bacf8.js","mappings":"sFAEOA,GAAG,O,GACDC,MAAM,W,GACTC,EAAAA,EAAAA,GAIM,OAJDD,MAAM,kBAAgB,EACzBC,EAAAA,EAAAA,GAEM,OAFDD,MAAM,WAAS,EAClBC,EAAAA,EAAAA,GAAgB,UAAZ,eAAO,G,GAGVD,MAAM,gB,GACJA,MAAM,W,GACTC,EAAAA,EAAAA,GAGI,SAHD,8EAGH,G,GACAA,EAAAA,EAAAA,GAAM,mB,GACNA,EAAAA,EAAAA,GAAmB,UAAf,cAAU,G,GACTD,MAAM,iB,0CAfnBE,EAAAA,EAAAA,IAwBM,MAxBNC,EAwBM,EAvBJF,EAAAA,EAAAA,GAsBM,MAtBNG,EAsBM,CArBJC,GAKAJ,EAAAA,EAAAA,GAeM,MAfNK,EAeM,EAdJL,EAAAA,EAAAA,GAaM,MAbNM,EAaM,CAZJC,EAIAC,EACAC,GACAT,EAAAA,EAAAA,GAKM,MALNU,EAKM,EAJJV,EAAAA,EAAAA,GAAmC,UAA1BW,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAC,MAAAD,EAAAC,QAAAF,KAAM,SACtBb,EAAAA,EAAAA,GAAqD,UAA5CW,QAAKC,EAAA,KAAAA,EAAA,GAAAI,GAAEF,EAAAG,mBAAkB,eAClCjB,EAAAA,EAAAA,GAA6E,UAApEW,QAAKC,EAAA,KAAAA,EAAA,GAAAI,GAAEF,EAAAG,gBAAe,KAAO,mCACtCjB,EAAAA,EAAAA,GAAqE,UAA7DD,MAAM,aAAcY,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAI,aAAAJ,EAAAI,eAAAL,KAAa,yB,aAS1D,GACEM,KAAM,MACNC,OACE,MAAO,CACLC,UAAW,EACXC,sBAAuB,IAE3B,EACAC,QAAS,CAEPC,wBAAwBC,GACtB,MAAMC,EAAU,6BAA6BC,MAAM,IACnD,IAAIC,EAMJ,OAJEA,EADCH,GAAKC,EAAQG,OACLH,EAAQI,KAAKC,MAAMN,EAAEC,EAAQG,QAAQ,GAAKH,EAAQD,EAAEC,EAAQG,QAE5DH,EAAQD,GAEZG,CACT,EAEAX,eAAee,GAAU,GACvBC,OAAOC,MAAMC,KAAIC,UACf,MAAMC,EAAOC,KAGPC,EAAaC,EAAQC,SACrBC,EAAgBH,EAAWI,WAAWC,QAAQ,OAC9CC,EAAWH,EAAcI,KAAK,aACpCD,EAAS1B,KAAO,kBAChB0B,EAASE,WACTF,EAASG,SAAW,EACpBV,KAAKO,SAAWA,EAGhB,MAAMI,EAAyBb,eAAeS,GAC5C,MAAMK,EAAkBL,EAASM,SAAS,SAC1CD,EAAgBE,OAAO,OACzB,EAGMC,EAA2BjB,eAAeS,GAC9C,MAAMS,EAAiBT,EAASM,SAAS,SACzCG,EAAeC,OAAOC,UAAY,GAClCF,EAAeC,OAAOE,KAAKC,MAAQ,WACrC,EAGMC,EAAyBvB,eAAeS,GAC5CA,EAASe,YAAYC,WACrBhB,EAASe,YAAYE,WAAW,EAClC,EAGMC,EAAyB3B,eAAeS,EAAUvB,EAAuBU,GAAU,GACvF,MAAMN,EAAU,6BAA6BC,MAAM,IAC7CqC,EAAYnB,EAASoB,eAC3BD,EAAUE,KAAK,iBACT1B,EAAQ2B,OACd,MAAMC,EAAmBJ,EAAUK,QAAQ1C,MAAM,KAAK,GAAG2C,MAAM,UAAU,GACzE,IAAIC,EAGAA,EAFDH,EAAiBvC,OAAS,EACxBH,EAAQ8C,QAAQJ,EAAiBK,MAAM,IAAI,IAAM/C,EAAQG,OACxCgB,EAASM,SAAU,GACjCzB,EAAQA,EAAQ8C,QAAQJ,EAAiBK,MAAM,EAAE,IAAI,QAMvC5B,EAASM,SAAU,GACjCiB,EAAiBK,MAAM,EAAE,KAEzB/C,EAAQA,EAAQ8C,QAAQJ,EAAiBK,MAAM,IAAI,OAItD/C,EAAQ8C,QAAQJ,GAAkB,IAAM1C,EAAQG,OAC/BgB,EAASM,SAAU,GACjCzB,EAAQA,EAAQ8C,QAAQJ,GAAkB,QAM5BvB,EAASM,SAAU,GACjCzB,EAAQA,EAAQ8C,QAAQJ,GAAkB,OAIlDG,EAAgBG,OAAS,CAAC,CAAC,aAE3B,MAAMC,EAAiB3C,EAAY,GAAK,GACxC,IAAI,IAAI4C,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACrB,MAAMC,EAAQnD,EAAQ8C,QAAQlD,GAA2B,EAAFsD,EACvD,IAAI,IAAIE,EAAE,EAAGA,GAAS,IAANF,EAAUD,EAAiB,GAAKG,IAAK,CACnD,MAAMC,EAAQlC,EAASoB,eAAee,UAAUH,EAAMC,GACtDC,EAAM3B,OAAO,QACf,CACF,CACF,EAGM6B,EAAoB7C,eAAeS,EAAUb,GAAU,GAE3D,MAAMkD,EAASrC,EAASoB,eAAekB,OAAO,GAC9CD,EAAOhB,KAAK,gBACN1B,EAAQ2B,OACd,MAAMiB,EAAeF,EAAOR,OAAO,GAAGW,KAAIC,GAAKA,IACzCC,EAAkB,CACtB,IACKH,EAAaX,MAAM,EAAEW,EAAaZ,QAAQ,qBAAqB,GAClE,cAAe,cAAe,KAAM,QACjCY,EAAaX,MAAMW,EAAaZ,QAAQ,oBAAqBY,EAAaZ,QAAQ,oBAAoB,GACzG,cAAe,cAAe,KAAM,QACjCY,EAAaX,MAAMW,EAAaZ,QAAQ,mBAAoBY,EAAaZ,QAAQ,mBAAmB,GACvG,cAAe,cAAe,KAAM,QACjCY,EAAaX,MAAMW,EAAaZ,QAAQ,kBAAmBY,EAAaZ,QAAQ,kBAAkB,GACrG,cAAe,cAAe,KAAM,KACpC,OAAQ,KAAM,KACd,OAAQ,KAAM,KACd,OAAQ,KAAM,QACVxC,EACJ,CAAC,OAAQ,KAAM,KACf,OAAQ,KAAM,MACd,MACGoD,EAAaX,MAAMW,EAAaZ,QAAQ,aAG/CU,EAAOR,OAASa,EAGhB,MAAMC,EAAqBJ,EAAaZ,QAAQ,kBAAoB,EAC9DiB,EAAiB,CACrB,eACIzD,EACJ,CAAC,oCACD,gCACA,oCACA,iCACA,CAAC,uBACD,qBAEI0D,EAAgB1D,EAAY,EAAI,EACtC,IAAI,IAAI4C,EAAE,EAAGA,EAAEc,EAAed,IAAI,CAChC,IAAIe,EAActD,EAAKb,wBAAwBgE,EAAuB,EAAFZ,GAChEgB,EAAavD,EAAKb,wBAAwBgE,EAAqB,EAAM,EAAFZ,GACvE/B,EAASM,SAASwC,EAAY,KAAKjB,OAAS,CAAC,CAACe,EAAeb,KAC7D/B,EAASM,SAAU,GAAEwC,MAAgBC,MAAeC,OAAM,EAC5D,CACF,EAGMC,EAAoC1D,eAAeS,GACvD,MAAMmB,EAAYnB,EAASoB,eACrBiB,EAASlB,EAAUmB,OAAO,GAChCnB,EAAUE,KAAK,YACfgB,EAAOhB,KAAK,gBACN1B,EAAQ2B,OACd,MAAM4B,EAAmBb,EAAOR,OAAO,GAAGF,QAAQ,qBAClD,IAAI,IAAII,EAAE,EAAGA,GAAGZ,EAAUgC,SAAUpB,IAAK,CACvC,MAAMG,EAAQlC,EAASM,SAAU,GAAEd,EAAKb,wBAAwBuE,KAAoBnB,KAAKvC,EAAKb,wBAAwBuE,EAAgB,MAAcnB,KACpJG,EAAMb,KAAK,gBACL1B,EAAQ2B,OACd,IAAI8B,EAAY,GAChB,IAAI,IAAInB,EAAE,EAAGA,EAAE,EAAGA,IAAK,CACrB,MAAMoB,EAAM,GACZA,EAAIC,KAAKpB,EAAML,OAAO,GAAK,EAAFI,IACzB,MAAMsB,EAAa,CAAC,GAAI,GAAI,GAAI,IAChC,GAAmC,IAAhCrB,EAAML,OAAO,GAAK,EAAFI,GAAKjD,OAAc,CACpC,GAAGkD,EAAML,OAAO,GAAK,EAAFI,GAAKR,MAAM,YAAa,CACzC,MAAM+B,EAAatB,EAAML,OAAO,GAAK,EAAFI,GAAKnD,MAAM,MAAM2E,QAAOhB,GAAKA,EAAEhB,MAAM,cAAa,GACrF8B,EAAW,GAAKC,EACbA,EAAWE,SAAS,MACrBH,EAAW,GAAKI,OAAO1E,KAAK2E,MAAyC,OAAnCC,OAAOL,EAAW1E,MAAM,KAAK,MACvD0E,EAAWE,SAAS,MAC5BH,EAAW,GAAKI,OAAO1E,KAAK2E,MAAyC,OAAnCC,OAAOL,EAAW1E,MAAM,KAAK,IAAa,KAE5EyE,EAAW,GAAKC,EAAW1E,MAAM,KAAK,EAE1C,CACA,GAAGoD,EAAML,OAAO,GAAK,EAAFI,GAAKR,MAAM,MAAO,CACnC,MAAMqC,EAAU5B,EAAML,OAAO,GAAK,EAAFI,GAAKnD,MAAM,MAAM2E,QAAOhB,GAAKA,EAAEhB,MAAM,QAAO,GAAG3C,MAAM,KAAK,GAC1FyE,EAAW,GAAKO,CAClB,CACA,GAAG5B,EAAML,OAAO,GAAK,EAAFI,GAAKR,MAAM,MAAO,CACnC,MAAMsC,EAAU7B,EAAML,OAAO,GAAK,EAAFI,GAAKnD,MAAM,MAAM2E,QAAOhB,GAAKA,EAAEhB,MAAM,QAAO,GAAG3C,MAAM,KAAK,GAC1FyE,EAAW,GAAKQ,CAClB,CACF,CACAV,EAAIC,QAAQC,GACZH,EAAY,IAAIA,KAAcC,EAChC,CACAnB,EAAML,OAAS,CAACuB,EAClB,CACF,EAGMY,EAA2BzE,eAAeS,GAC9C,MAAMmB,EAAYnB,EAASoB,eAC3BD,EAAUE,KAAK,UACfF,EAAUE,KAAK,eACfF,EAAUE,KAAK,kBACT1B,EAAQ2B,OACd,MAAM2C,EAAWjE,EAASM,SACvB,GAAEd,EAAKb,wBAAwBwC,EAAU+C,YAAc,OAAO1E,EAAKb,wBAAwBwC,EAAU+C,YAAc,EAAI,MAAM/C,EAAUgC,YAKpIC,EAAY,CAEhB,CACE,eACA,QACA,GACA,GACA,GACA,mBACA,GACA,GACA,GACA,GACA,aACA,aACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,IAIF,CACE,OACA,QACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,MACA,aACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,IAIF,CACE,UACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,aACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,IAIF,CACE,UACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,aACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,IAIF,CACE,GACA,GACA,GACA,GACA,GACA,YACA,GACA,GACA,GACA,GACA,GACA,OACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,IAIF,CACE,GACA,cACA,WACA,WACA,GACA,gCACA,OACA,KACA,KACA,iBACA,YACA,qCACA,GACA,GACA,iBACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAsKJ,IAAI,IAAIrB,EAAE,EAAGA,EAAEZ,EAAUgC,SAAUpB,IAC9BA,EAAI,GACLqB,EAAUE,KAAK,CACb,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KAINW,EAASpC,OAASuB,EAGlB,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","sources":["webpack://add-in-mpd-omp-transformer/./src/App.vue","webpack://add-in-mpd-omp-transformer/./src/App.vue?7ccd","webpack://add-in-mpd-omp-transformer/./src/main.js","webpack://add-in-mpd-omp-transformer/webpack/bootstrap","webpack://add-in-mpd-omp-transformer/webpack/runtime/chunk loaded","webpack://add-in-mpd-omp-transformer/webpack/runtime/compat get default export","webpack://add-in-mpd-omp-transformer/webpack/runtime/define property getters","webpack://add-in-mpd-omp-transformer/webpack/runtime/global","webpack://add-in-mpd-omp-transformer/webpack/runtime/hasOwnProperty shorthand","webpack://add-in-mpd-omp-transformer/webpack/runtime/jsonp chunk loading","webpack://add-in-mpd-omp-transformer/webpack/startup"],"sourcesContent":["// https://www.youtube.com/watch?v=cfc0imOXzhM\n<template>\n  <div id=\"app\">\n    <div class=\"content\">\n      <div class=\"content-header\">\n        <div class=\"padding\">\n          <h1>Welcome</h1>\n        </div>\n      </div>\n      <div class=\"content-main\">\n        <div class=\"padding\">\n          <p>\n            Choose the button below to set the color of the selected range to\n            green.\n          </p>\n          <br />\n          <h3>Try it out</h3>\n          <div class=\"btn-container\">\n            <button @click=\"test\">Test</button>\n            <button @click=\"generateMaster()\">GET MASTER</button>\n            <button @click=\"generateMaster(true)\">GET MASTER (FH & FC optimized)</button>\n            <button class=\"btn-danger\" @click=\"deleteSheet\">Remove sheet</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'App',\n    data() {\n      return {\n        rowsToAdd: 3,\n        sampleThresholdColumn: \"K\",\n      }\n    },\n    methods: {\n      // Get the column name from the number (0 indexed)\n      getColumnNameFromNumber(n) {\n        const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n        let result;\n        if(n >= letters.length) {\n          result = letters[Math.floor(n/letters.length)-1] + letters[n%letters.length];\n        } else {\n          result = letters[n];\n        }\n        return result;\n      },\n\n      generateMaster(optimized=false) {\n        window.Excel.run(async context => {\n          const self = this;\n\n          // Create a copy from the original MPD/OMP sheet\n          const myWorkbook = context.workbook;\n          const originalSheet = myWorkbook.worksheets.getItem(\"OMP\");\n          const newSheet = originalSheet.copy(\"Beginning\");\n          newSheet.name = \"Transformed OMP\";\n          newSheet.activate();\n          newSheet.position = 0;\n          this.newSheet = newSheet;\n\n          // Insert the rows needed to have 5 as the page header\n          const addRemainingHeaderRows = async function(newSheet) {\n            const rangeToMoveDown = newSheet.getRange(\"A3:W5\");\n            rangeToMoveDown.insert(\"Down\");\n          }\n\n          // Formating the new row that will be the table header\n          const stylingNewTableHeaderRow = async function(newSheet) {\n            const headerRowRange = newSheet.getRange(\"A6:W6\");\n            headerRowRange.format.rowHeight = 54;\n            headerRowRange.format.fill.color = \"lightgrey\";\n          }\n\n          // Setting the freezing row according to the movement done\n          const changeFrozenHeaderRows = async function(newSheet) {\n            newSheet.freezePanes.unfreeze();\n            newSheet.freezePanes.freezeRows(6);\n          }\n\n          // Insert remaining columns for the thresholds and intervals\n          const insertRemainingColumns = async function(newSheet, sampleThresholdColumn, optimized=false) {\n            const letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n            const usedRange = newSheet.getUsedRange();\n            usedRange.load(\"address\");\n            await context.sync();\n            const lastColumnLetter = usedRange.address.split(\":\")[1].match(/[A-Z]+/)[0];\n            let LastColumnRange;\n            if(lastColumnLetter.length > 1) {\n              if(letters.indexOf(lastColumnLetter.slice(1))+1 === letters.length) {\n                LastColumnRange = newSheet.getRange(`${\n                    letters[letters.indexOf(lastColumnLetter.slice(0,1))+1]\n                  }${\n                    \"A\"\n                  }6`);\n              }\n              else {\n                LastColumnRange = newSheet.getRange(`${\n                    lastColumnLetter.slice(0,1)\n                  }${\n                    letters[letters.indexOf(lastColumnLetter.slice(1))+1]\n                  }6`);\n              }\n            } else {\n              if(letters.indexOf(lastColumnLetter)+1 === letters.length) {\n                LastColumnRange = newSheet.getRange(`${\n                    letters[letters.indexOf(lastColumnLetter)+1]\n                  }${\n                    \"A\"\n                  }6`);\n              }\n              else {\n                LastColumnRange = newSheet.getRange(`${\n                    letters[letters.indexOf(lastColumnLetter)+1]\n                  }6`);\n              }\n            }\n            LastColumnRange.values = [[\"Remarks:\"]];\n\n            const nextDueColumns = optimized ? 20 : 14;\n            for(let i=0; i<4; i++) {\n              const index = letters.indexOf(sampleThresholdColumn) + i*5;\n              for(let j=1; j<(i === 3 ? nextDueColumns : 5 ); j++) {\n                const range = newSheet.getUsedRange().getColumn(index+j);\n                range.insert(\"Right\");\n              }\n            }\n          }\n\n          // Insert header names for the columns added\n          const insertHeaderNames = async function(newSheet, optimized=false) {\n            // Adding new names on main header\n            const header = newSheet.getUsedRange().getRow(5);\n            header.load(\"values\");\n            await context.sync();\n            const headerValues = header.values[0].map(x => x);\n            const newHeaderValues = [\n              [\n                ...headerValues.slice(0,headerValues.indexOf(\"SAMPLE\\nTHRESHOLD\")+1),\n                \"CAL various\", \"CAL in days\", \"FH\", \"FC\",\n                ...headerValues.slice(headerValues.indexOf(\"SAMPLE\\nINTERVAL\"), headerValues.indexOf(\"SAMPLE\\nINTERVAL\")+1),\n                \"CAL various\", \"CAL in days\", \"FH\", \"FC\",\n                ...headerValues.slice(headerValues.indexOf(\"100%\\nTHRESHOLD\"), headerValues.indexOf(\"100%\\nTHRESHOLD\")+1),\n                \"CAL various\", \"CAL in days\", \"FH\", \"FC\",\n                ...headerValues.slice(headerValues.indexOf(\"100%\\nINTERVAL\"), headerValues.indexOf(\"100%\\nINTERVAL\")+1),\n                \"CAL various\", \"CAL in days\", \"FH\", \"FC\",\n                \"Date\", \"FH\", \"FC\",\n                \"Date\", \"FH\", \"FC\",\n                \"Date\", \"FH\", \"FC\",\n                ...(optimized ? \n                [\"Date\", \"FH\", \"FC\",\n                \"Date\", \"FH\", \"FC\"] :\n                []),\n                ...headerValues.slice(headerValues.indexOf(\"SOURCE\"))\n              ]\n            ];\n            header.values = newHeaderValues;\n            \n            // Adding the name gruop on the subheader\n            const firstColumnLastDue = headerValues.indexOf(\"100%\\nINTERVAL\") + 5;\n            const subHeaderNames = [\n              \"LAST DONE\",\n              ...(optimized ? \n              [\"NEXT DUE FH optimized not sampled\",\n              \"NEXT DUE FH optimized sampled\",\n              \"NEXT DUE FC optimized not sampled\",\n              \"NEXT DUE FC optimized sampled\"] :\n              [\"NEXT DUE not sampled\",\n              \"NEXT DUE sampled\",])\n            ]\n            const qttSubHeaders = optimized ? 5 : 3;\n            for(let i=0; i<qttSubHeaders; i++){\n              let firstColumn = self.getColumnNameFromNumber(firstColumnLastDue + i*3);\n              let lastColumn = self.getColumnNameFromNumber(firstColumnLastDue + 2 + i*3);\n              newSheet.getRange(firstColumn+\"5\").values = [[subHeaderNames[i]]];\n              newSheet.getRange(`${firstColumn}5:${lastColumn}5`).merge(true);\n            }\n          };\n\n          // Add values to the columns for each threshold and interval derivated columns (CALs, FH and FC)\n          const addValuesThresholdIntervalColumns = async function(newSheet) {\n            const usedRange = newSheet.getUsedRange();\n            const header = usedRange.getRow(5);\n            usedRange.load(\"rowCount\");\n            header.load(\"values\");\n            await context.sync();\n            const firstColumnRange = header.values[0].indexOf(\"SAMPLE\\nTHRESHOLD\");\n            for(let i=7; i<=usedRange.rowCount; i++) {\n              const range = newSheet.getRange(`${self.getColumnNameFromNumber(firstColumnRange)}${i}:${self.getColumnNameFromNumber(firstColumnRange+((5*4)-1))}${i}`);\n              range.load(\"values\");\n              await context.sync();\n              let newValues = [];\n              for(let j=0; j<4; j++) {\n                const row = [];\n                row.push(range.values[0][j*5]);\n                const itemValues = [\"\", \"\", \"\", \"\"];\n                if(range.values[0][j*5].length !== 0) {\n                  if(range.values[0][j*5].match(/YE|MO|DY/)) {\n                    const calVarious = range.values[0][j*5].split(\"\\n\").filter(x => x.match(/YE|MO|DY/))[0];\n                    itemValues[0] = calVarious; // Can be more than 1 option in time mesure (YE, MO, DY or HR)\n                    if(calVarious.includes(\"YE\")) {\n                      itemValues[1] = String(Math.round(Number(calVarious.split(\" \")[0]) * 365.25));\n                    } else if(calVarious.includes(\"MO\")) {\n                      itemValues[1] = String(Math.round(Number(calVarious.split(\" \")[0]) * 365.25/12));\n                    } else {\n                      itemValues[1] = calVarious.split(\" \")[0];\n                    }\n                  }\n                  if(range.values[0][j*5].match(/FH/)) {\n                    const fhValue = range.values[0][j*5].split(\"\\n\").filter(x => x.match(/FH/))[0].split(\" \")[0];\n                    itemValues[2] = fhValue;\n                  }\n                  if(range.values[0][j*5].match(/FC/)) {\n                    const fcValue = range.values[0][j*5].split(\"\\n\").filter(x => x.match(/FC/))[0].split(\" \")[0];\n                    itemValues[3] = fcValue;\n                  }\n                }\n                row.push(...itemValues);\n                newValues = [...newValues, ...row];\n              }\n              range.values = [newValues];\n            }\n          };\n\n          // Add the right hand side set up columns and values\n          const setUpRightSideParameters = async function(newSheet) {\n            const usedRange = newSheet.getUsedRange();\n            usedRange.load(\"values\");\n            usedRange.load(\"columnCount\");\n            usedRange.load(\"rowCount\");\n            await context.sync();\n            const newRange = newSheet.getRange(\n              `${self.getColumnNameFromNumber(usedRange.columnCount + 1)}1:${self.getColumnNameFromNumber(usedRange.columnCount + 1 + 22)}${usedRange.rowCount}`\n            );\n            // newRange.load(\"address\");\n            // await context.sync();\n            // console.log(newRange.address)\n            const newValues = [\n              // First row\n              [\n                \"Status date:\",\n                \"'0000\",\n                \"\",\n                \"\",\n                \"\",\n                \"Status selected:\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"A/C Model:\",\n                \"Eng 1 ESN:\",\n                \"XXX\",\n                \"FH:\",\n                \"XXX\",\n                \"FC:\",\n                \"XXX\",\n                \"\", // =\"A/C total time: \"&$BF$3&\n                \"\", // =\"A/C total cycles: \"&$BF$4&\" FC\"\n                \"\", // =\"A/C Entry Into Service: \" &TEXT($BF$2;\"dd-mmm-yyyy\")\n                \"\", // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n                \"\",\n                \"\" // =\"MAINTENANCE STATUS \"& $BE$2&\" MSN \"&$BE$4\n              ],\n              \n              // Second row\n              [\n                \"EIS:\",\n                \"'0000\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"XXX\",\n                \"Eng 2 ESN:\",\n                \"XXX\",\n                \"FH:\",\n                \"XXX\",\n                \"FC:\",\n                \"XXX\",\n                \"\", // =\"A/C total time: \"&$BF$3\n                \"\", // =\"A/C total cycles: \"&$BF$4&\" FC\"\n                \"\", // =\"Engine total time: \"&$BS$1\n                \"\", // =\"Engine total cycles: \"&$BU$1&\" FC\"\n                \"\", // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n                \"\" // =\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1\n              ],\n              \n              // Third row\n              [\n                \"A/C FH:\",\n                \"XXX\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"MSN:\",\n                \"Eng 3 ESN:\",\n                \"XXX\",\n                \"FH:\",\n                \"XXX\",\n                \"FC:\",\n                \"XXX\",\n                \"\", // =\"A/C total time: \"&$BF$3\n                \"\", // =\"A/C total cycles: \"&$BF$4&\" FC\"\n                \"\", // =\"Engine total time: \"&$BS$1\n                \"\", // =\"Engine total cycles: \"&$BU$1&\" FC\"\n                \"\", // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n                \"\" // =\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1\n              ],\n              \n              // Fourth row\n              [\n                \"A/C FC:\",\n                \"XXX\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"0XXX\",\n                \"Eng 4 ESN:\",\n                \"XXX\",\n                \"FH:\",\n                \"XXX\",\n                \"FC:\",\n                \"XXX\",\n                \"\", // =\"A/C total time: \"&$BF$3\n                \"\", // =\"A/C total cycles: \"&$BF$4&\" FC\"\n                \"\", // =\"Engine total time: \"&$BS$1\n                \"\", // =\"Engine total cycles: \"&$BU$1&\" FC\"\n                \"\", // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n                \"\" // =\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1\n              ],\n              \n              // Fifth row\n              [\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"LAST DONE\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                \"APU:\",\n                \"XXX\",\n                \"FH:\",\n                \"XXX\",\n                \"FC:\",\n                \"XXX\",\n                \"\", // =\"A/C total time: \"&$BF$3\n                \"\", // =\"A/C total cycles: \"&$BF$4&\" FC\"\n                \"\", // =\"Engine total time: \"&$BS$4\n                \"\", // =\"Engine total cycles: \"&$BU$4&\" FC\"\n                \"\", // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n                \"\" // =\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1\n              ],\n              \n              // Sixth row\n              [\n                \"\",\n                \"APP Airbus:\",\n                \"APP OMP:\",\n                \"APP AEC:\",\n                \"\",\n                \"Refer to:\\nTCC, TES, LCL, N/A\",\n                \"Date\",\n                \"FH\",\n                \"FC\",\n                \"Other rematks:\",\n                \"Refer to:\",\n                \"Select Airframe, APU or Engine 1-4\",\n                \"\",\n                \"\",\n                \"De-storage AMM\",\n                \"\",\n                \"\",\n                \"\", // =\"A/C total time: \"&$BF$3\n                \"\", // =\"A/C total cycles: \"&$BF$4&\" FC\"\n                \"\", // =\"APU total time: \"&$BS$5\n                \"\", // =\"APU total cycles: \"&$BU$5&\" FC\"\n                \"\", // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n                \"\" // =\"MAINTENANCE STATUS APU SN \"& $BG$5\n              ],\n            ];\n            // const newFormulas = [\n            //   // First row\n            //   [\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     '=\"A/C total time: \"&$BF$3&', // =\"A/C total time: \"&$BF$3&\n            //     '=\"A/C total cycles: \"&$BF$4&\" FC\"', // =\"A/C total cycles: \"&$BF$4&\" FC\"\n            //     '=\"A/C Entry Into Service: \" &TEXT($BF$2;\"dd-mmm-yyyy\")', // =\"A/C Entry Into Service: \" &TEXT($BF$2;\"dd-mmm-yyyy\")\n            //     '=\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")', // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n            //     '',\n            //     '=\"MAINTENANCE STATUS \"& $BE$2&\" MSN \"&$BE$4' // =\"MAINTENANCE STATUS \"& $BE$2&\" MSN \"&$BE$4\n            //   ],\n              \n            //   // Second row\n            //   [\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     '=\"A/C total time: \"&$BF$3', // =\"A/C total time: \"&$BF$3\n            //     '=\"A/C total cycles: \"&$BF$4&\" FC\"', // =\"A/C total cycles: \"&$BF$4&\" FC\"\n            //     '=\"Engine total time: \"&$BS$1', // =\"Engine total time: \"&$BS$1\n            //     '=\"Engine total cycles: \"&$BU$1&\" FC\"', // =\"Engine total cycles: \"&$BU$1&\" FC\"\n            //     '=\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")', // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n            //     '=\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1' // =\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1\n            //   ],\n              \n            //   // Third row\n            //   [\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     '=\"A/C total time: \"&$BF$3', // =\"A/C total time: \"&$BF$3\n            //     '=\"A/C total cycles: \"&$BF$4&\" FC\"', // =\"A/C total cycles: \"&$BF$4&\" FC\"\n            //     '=\"Engine total time: \"&$BS$1', // =\"Engine total time: \"&$BS$1\n            //     '=\"Engine total cycles: \"&$BU$1&\" FC\"', // =\"Engine total cycles: \"&$BU$1&\" FC\"\n            //     '=\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")', // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n            //     '=\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1' // =\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1\n            //   ],\n              \n            //   // Fourth row\n            //   [\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     '=\"A/C total time: \"&$BF$3', // =\"A/C total time: \"&$BF$3\n            //     '=\"A/C total cycles: \"&$BF$4&\" FC\"', // =\"A/C total cycles: \"&$BF$4&\" FC\"\n            //     '=\"Engine total time: \"&$BS$1', // =\"Engine total time: \"&$BS$1\n            //     '=\"Engine total cycles: \"&$BU$1&\" FC\"', // =\"Engine total cycles: \"&$BU$1&\" FC\"\n            //     '=\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")', // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n            //     '=\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1' // =\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1\n            //   ],\n              \n            //   // Fifth row\n            //   [\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     '=\"A/C total time: \"&$BF$3', // =\"A/C total time: \"&$BF$3\n            //     '=\"A/C total cycles: \"&$BF$4&\" FC\"', // =\"A/C total cycles: \"&$BF$4&\" FC\"\n            //     '=\"Engine total time: \"&$BS$4', // =\"Engine total time: \"&$BS$4\n            //     '=\"Engine total cycles: \"&$BU$4&\" FC\"', // =\"Engine total cycles: \"&$BU$4&\" FC\"\n            //     '=\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")', // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n            //     '=\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1' // =\"MAINTENANCE STATUS ENGINE 1 ESN \"& $BG$1\n            //   ],\n              \n            //   // Sixth row\n            //   [\n            //    \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     \"\",\n            //     '=\"A/C total time: \"&$BF$3', // =\"A/C total time: \"&$BF$3\n            //     '=\"A/C total cycles: \"&$BF$4&\" FC\"', // =\"A/C total cycles: \"&$BF$4&\" FC\"\n            //     '=\"APU total time: \"&$BS$5', // =\"APU total time: \"&$BS$5\n            //     '=\"APU total cycles: \"&$BU$5&\" FC\"', // =\"APU total cycles: \"&$BU$5&\" FC\"\n            //     '=\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")', // =\"Date of status: \"&TEXT($BF$1;\"dd-mmm-yyyy\")\n            //     '=\"MAINTENANCE STATUS APU SN \"& $BG$5' // =\"MAINTENANCE STATUS APU SN \"& $BG$5\n            //   ],\n            // ];\n            for(let i=0; i<usedRange.rowCount; i++) {\n              if(i > 5) {\n                newValues.push([\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                  \"\",\n                ]);\n              }\n            }\n            newRange.values = newValues;\n\n            // Define constants for an easy code\n            const statusDataCell = `${self.getColumnNameFromNumber(usedRange.columnCount + 2)}1`;\n            const eisDataCell = `${self.getColumnNameFromNumber(usedRange.columnCount + 2)}2`;\n            const acFhDataCell = `${self.getColumnNameFromNumber(usedRange.columnCount + 2)}3`;\n            const acFcDataCell = `${self.getColumnNameFromNumber(usedRange.columnCount + 2)}4`;\n            const timeInDaysColumnName = `${self.getColumnNameFromNumber(usedRange.columnCount + 3)}`;\n            const timeInMonthsColumnName = `${self.getColumnNameFromNumber(usedRange.columnCount + 4)}`;\n            const timeInYearsColumnName = `${self.getColumnNameFromNumber(usedRange.columnCount + 5)}`;\n            const aircraftDataColumnName = `${self.getColumnNameFromNumber(usedRange.columnCount + 11)}`;\n            const componentsSNDataColumnName = `${self.getColumnNameFromNumber(usedRange.columnCount + 13)}`;\n            const componentsFhDataColumnName = `${self.getColumnNameFromNumber(usedRange.columnCount + 15)}`;\n            const componentsFcDataColumnName = `${self.getColumnNameFromNumber(usedRange.columnCount + 17)}`;\n            const taskReferToDataColumnName = `${self.getColumnNameFromNumber(usedRange.columnCount + 6)}`;\n            const taskDateDataColumnName = `${self.getColumnNameFromNumber(usedRange.columnCount + 7)}`;\n\n            for(let i=0; i<usedRange.rowCount; i++) {\n              if(i === 0) {\n                for(let j=3; j<=23; j++) {\n                  const newCell = newRange.getCell(i,(j-1));\n                  switch(j) {\n                    case 3:\n                      newCell.formulas = [[`=IF(MOD(${statusDataCell},365.25)<=31,TRUNC(MOD(${statusDataCell},365.25)),IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31),TRUNC(MOD(${statusDataCell},365.25))-31,IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31),TRUNC(MOD(${statusDataCell},365.25))-(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,28)+31),IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30),TRUNC(MOD(${statusDataCell},365.25))-(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,28)+31+31),IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31),TRUNC(MOD(${statusDataCell},365.25))-(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,28)+31+31+30),IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30),TRUNC(MOD(${statusDataCell},365.25))-(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31),IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31),TRUNC(MOD(${statusDataCell},365.25))-(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30),IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31),TRUNC(MOD(${statusDataCell},365.25))-(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31),IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30),TRUNC(MOD(${statusDataCell},365.25))-(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31),IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31),TRUNC(MOD(${statusDataCell},365.25))-(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31+30),IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31+30),TRUNC(MOD(${statusDataCell},365.25))-(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31+30+31),TRUNC(MOD(${statusDataCell},365.25))-(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31+30+31+30))))))))))))`]]\n                      break;\n                    case 4:\n                      newCell.formulas = [[`=IF(MOD(${statusDataCell},365.25)<=31,\"01\",IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31),\"02\",IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31),\"03\",IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30),\"04\",IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31),\"05\",IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30),\"06\",IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31),\"07\",IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31),\"08\",IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30),\"09\",IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31),\"10\",IF(MOD(${statusDataCell},365.25)<=(IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${statusDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31+30),\"11\",\"12\")))))))))))`]]\n                      break;\n                    case 5:\n                      newCell.formulas = [[`=TRUNC(${statusDataCell}/365.25+1900)`]]\n                      break;\n                    case 18:\n                      newCell.formulas = [[`=\"A/C total time: \"&${acFhDataCell}`]];\n                      break;\n                    case 19:\n                      newCell.formulas = [[`=\"A/C total cycles: \"&${acFcDataCell}&\" FC\"`]];\n                      break;\n                    case 20:\n                      newCell.formulas = [[`=\"A/C Entry Into Service: \"&IF(${timeInDaysColumnName}2<10,\"0\"&${timeInDaysColumnName}2,${timeInDaysColumnName}2)&\"-\"&${timeInMonthsColumnName}2&\"-\"&${timeInYearsColumnName}2`]];\n                      break;\n                    case 22:\n                      newCell.formulas = [[`=\"Date of status: \"&IF(${timeInDaysColumnName}1<10,\"0\"&${timeInDaysColumnName}1,${timeInDaysColumnName}1)&\"-\"&${timeInMonthsColumnName}1&\"-\"&${timeInYearsColumnName}1`]];\n                      break;\n                    case 23:\n                      newCell.formulas = [[`=\"MAINTENANCE STATUS \"& ${aircraftDataColumnName}2&\" MSN \"&${aircraftDataColumnName}4`]];\n                      break;\n                  }\n                }\n              }\n              else if(i === 1) {\n                for(let j=3; j<=23; j++) {\n                  const newCell = newRange.getCell(i,(j-1));\n                  switch(j) {\n                    case 3:\n                      newCell.formulas = [[`=IF(MOD(${eisDataCell},365.25)<=31,TRUNC(MOD(${eisDataCell},365.25)),IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31),TRUNC(MOD(${eisDataCell},365.25))-31,IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31),TRUNC(MOD(${eisDataCell},365.25))-(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,28)+31),IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30),TRUNC(MOD(${eisDataCell},365.25))-(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,28)+31+31),IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31),TRUNC(MOD(${eisDataCell},365.25))-(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,28)+31+31+30),IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30),TRUNC(MOD(${eisDataCell},365.25))-(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31),IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31),TRUNC(MOD(${eisDataCell},365.25))-(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30),IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31),TRUNC(MOD(${eisDataCell},365.25))-(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31),IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30),TRUNC(MOD(${eisDataCell},365.25))-(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31),IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31),TRUNC(MOD(${eisDataCell},365.25))-(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31+30),IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31+30),TRUNC(MOD(${eisDataCell},365.25))-(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31+30+31),TRUNC(MOD(${eisDataCell},365.25))-(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31+30+31+30))))))))))))`]]\n                      break;\n                    case 4:\n                      newCell.formulas = [[`=IF(MOD(${eisDataCell},365.25)<=31,\"01\",IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31),\"02\",IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31),\"03\",IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30),\"04\",IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31),\"05\",IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30),\"06\",IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31),\"07\",IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31),\"08\",IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30),\"09\",IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31),\"10\",IF(MOD(${eisDataCell},365.25)<=(IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${eisDataCell}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31+30),\"11\",\"12\")))))))))))`]]\n                      break;\n                    case 5:\n                      newCell.formulas = [[`=TRUNC(${eisDataCell}/365.25+1900)`]]\n                      break;\n                    case 18:\n                      newCell.formulas = [[`=\"A/C total time: \"&${acFhDataCell}`]];\n                      break;\n                    case 19:\n                      newCell.formulas = [[`=\"A/C total cycles: \"&${acFcDataCell}&\" FC\"`]];\n                      break;\n                    case 20:\n                      newCell.formulas = [[`=\"Engine total time: \"&${componentsFhDataColumnName}1`]];\n                      break;\n                    case 21:\n                      newCell.formulas = [[`=\"Engine total cycles: \"&${componentsFcDataColumnName}1&\" FC\"`]];\n                      break;\n                    case 22:\n                      newCell.formulas = [[`=\"Date of status: \"&IF(${timeInDaysColumnName}1<10,\"0\"&${timeInDaysColumnName}1,${timeInDaysColumnName}1)&\"-\"&${timeInMonthsColumnName}1&\"-\"&${timeInYearsColumnName}1`]];\n                      break;\n                    case 23:\n                      newCell.formulas = [[`=\"MAINTENANCE STATUS ENGINE 1 ESN \"&${componentsSNDataColumnName}1`]];\n                      break;\n                  }\n                }\n              }\n              else if(i === 2) {\n                for(let j=18; j<=23; j++) {\n                  const newCell = newRange.getCell(i,(j-1));\n                  newCell.load(\"address\");\n                  await context.sync();\n                  // console.log(newCell.address);\n                  switch(j) {\n                    case 18:\n                      newCell.formulas = [[`=\"A/C total time: \"&${acFhDataCell}`]];\n                      break;\n                    case 19:\n                      newCell.formulas = [[`=\"A/C total cycles: \"&${acFcDataCell}&\" FC\"`]];\n                      break;\n                    case 20:\n                      newCell.formulas = [[`=\"Engine total time: \"&${componentsFhDataColumnName}2`]];\n                      break;\n                    case 21:\n                      newCell.formulas = [[`=\"Engine total cycles: \"&${componentsFcDataColumnName}2&\" FC\"`]];\n                      break;\n                    case 22:\n                      newCell.formulas = [[`=\"Date of status: \"&IF(${timeInDaysColumnName}1<10,\"0\"&${timeInDaysColumnName}1,${timeInDaysColumnName}1)&\"-\"&${timeInMonthsColumnName}1&\"-\"&${timeInYearsColumnName}1`]];\n                      break;\n                    case 23:\n                      newCell.formulas = [[`=\"MAINTENANCE STATUS ENGINE 2 ESN \"&${componentsSNDataColumnName}2`]];\n                      break;\n                  }\n                }\n              }\n              else if(i === 3) {\n                for(let j=18; j<=23; j++) {\n                  const newCell = newRange.getCell(i,(j-1));\n                  newCell.load(\"address\");\n                  await context.sync();\n                  // console.log(newCell.address);\n                  switch(j) {\n                    case 18:\n                      newCell.formulas = [[`=\"A/C total time: \"&${acFhDataCell}`]];\n                      break;\n                    case 19:\n                      newCell.formulas = [[`=\"A/C total cycles: \"&${acFcDataCell}&\" FC\"`]];\n                      break;\n                    case 20:\n                      newCell.formulas = [[`=\"Engine total time: \"&${componentsFhDataColumnName}3`]];\n                      break;\n                    case 21:\n                      newCell.formulas = [[`=\"Engine total cycles: \"&${componentsFcDataColumnName}3&\" FC\"`]];\n                      break;\n                    case 22:\n                      newCell.formulas = [[`=\"Date of status: \"&IF(${timeInDaysColumnName}1<10,\"0\"&${timeInDaysColumnName}1,${timeInDaysColumnName}1)&\"-\"&${timeInMonthsColumnName}1&\"-\"&${timeInYearsColumnName}1`]];\n                      break;\n                    case 23:\n                      newCell.formulas = [[`=\"MAINTENANCE STATUS ENGINE 3 ESN \"&${componentsSNDataColumnName}3`]];\n                      break;\n                  }\n                }\n              }\n              else if(i === 4) {\n                for(let j=18; j<=23; j++) {\n                  const newCell = newRange.getCell(i,(j-1));\n                  newCell.load(\"address\");\n                  await context.sync();\n                  // console.log(newCell.address);\n                  switch(j) {\n                    case 18:\n                      newCell.formulas = [[`=\"A/C total time: \"&${acFhDataCell}`]];\n                      break;\n                    case 19:\n                      newCell.formulas = [[`=\"A/C total cycles: \"&${acFcDataCell}&\" FC\"`]];\n                      break;\n                    case 20:\n                      newCell.formulas = [[`=\"Engine total time: \"&${componentsFhDataColumnName}4`]];\n                      break;\n                    case 21:\n                      newCell.formulas = [[`=\"Engine total cycles: \"&${componentsFcDataColumnName}4&\" FC\"`]];\n                      break;\n                    case 22:\n                      newCell.formulas = [[`=\"Date of status: \"&IF(${timeInDaysColumnName}1<10,\"0\"&${timeInDaysColumnName}1,${timeInDaysColumnName}1)&\"-\"&${timeInMonthsColumnName}1&\"-\"&${timeInYearsColumnName}1`]];\n                      break;\n                    case 23:\n                      newCell.formulas = [[`=\"MAINTENANCE STATUS ENGINE 4 ESN \"&${componentsSNDataColumnName}4`]];\n                      break;\n                  }\n                }\n              }\n              else if(i === 5) {\n                for(let j=18; j<=23; j++) {\n                  const newCell = newRange.getCell(i,(j-1));\n                  newCell.load(\"address\");\n                  await context.sync();\n                  // console.log(newCell.address);\n                  switch(j) {\n                    case 18:\n                      newCell.formulas = [[`=\"A/C total time: \"&${acFhDataCell}`]];\n                      break;\n                    case 19:\n                      newCell.formulas = [[`=\"A/C total cycles: \"&${acFcDataCell}&\" FC\"`]];\n                      break;\n                    case 20:\n                      newCell.formulas = [[`=\"Engine total time: \"&${componentsFhDataColumnName}5`]];\n                      break;\n                    case 21:\n                      newCell.formulas = [[`=\"Engine total cycles: \"&${componentsFcDataColumnName}5&\" FC\"`]];\n                      break;\n                    case 22:\n                      newCell.formulas = [[`=\"Date of status: \"&IF(${timeInDaysColumnName}1<10,\"0\"&${timeInDaysColumnName}1,${timeInDaysColumnName}1)&\"-\"&${timeInMonthsColumnName}1&\"-\"&${timeInYearsColumnName}1`]];\n                      break;\n                    case 23:\n                      newCell.formulas = [[`=\"MAINTENANCE STATUS APU SN \"&${componentsSNDataColumnName}5`]];\n                      break;\n                  }\n                }\n              }\n              else {\n                newSheet.getRange(`${self.getColumnNameFromNumber(usedRange.columnCount + 11)}${i+1}`).formulas = [[`=IF(${taskReferToDataColumnName}${i+1}=\"TCC\",\"Refer to TCC status\",IF(${taskReferToDataColumnName}${i+1}=\"TES\",\"Refer to OMP status in ECD\",IF(${taskReferToDataColumnName}${i+1}=\"LCL\",\"Refer to Line Check\",IF(${taskReferToDataColumnName}${i+1}=\"N/A\",\"Not Applicable\",\"\"))))`]];\n                newSheet.getRange(`${self.getColumnNameFromNumber(usedRange.columnCount + 16)}${i+1}`).formulas = [[`=IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=31,TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25)),IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-31,IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,28)+31),IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,28)+31+31),IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,28)+31+31+30),IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,28)+31+31+30+31),IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,28)+31+31+30+31+30),IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31),IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31),IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31+30),IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31+30),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31+30+31),TRUNC(MOD(${taskDateDataColumnName}${i+1},365.25))-(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,28)+31+31+30+31+30+31+31+30+31+30))))))))))))`]];\n                newSheet.getRange(`${self.getColumnNameFromNumber(usedRange.columnCount + 17)}${i+1}`).formulas = [[`=IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=31,\"01\",IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31),\"02\",IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31),\"03\",IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30),\"04\",IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31),\"05\",IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30),\"06\",IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31),\"07\",IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31),\"08\",IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30),\"09\",IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31),\"10\",IF(MOD(${taskDateDataColumnName}${i+1},365.25)<=(IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=0,29,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=1,28.75,IF(MOD(TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900),4)=2,28.5,28.25)))+31+31+30+31+30+31+31+30+31+30),\"11\",\"12\")))))))))))`]];\n                newSheet.getRange(`${self.getColumnNameFromNumber(usedRange.columnCount + 18)}${i+1}`).formulas = [[`=TRUNC(${taskDateDataColumnName}${i+1}/365.25+1900)`]];\n              }\n            }\n            const dataValidationRange = newSheet.getRange(\n              `${self.getColumnNameFromNumber(usedRange.columnCount + 6)}7:${self.getColumnNameFromNumber(usedRange.columnCount + 6)}${usedRange.rowCount}`\n            );\n            dataValidationRange.dataValidation.rule = {\n              list: {\n                  inCellDropDown: true,\n                  source: \"TCC,TES,LCL,N/A\"\n                }\n            };\n            newSheet.getRange(`${self.getColumnNameFromNumber(usedRange.columnCount + 7)}1`).dataValidation.rule = {\n              list: {\n                  inCellDropDown: true,\n                  source: \"Airframe,APU,Engine 1,Engine 2,Engine 3,Engine 4\"\n                }\n            };\n          };\n\n          // Add formulas to the \"last done\" and \"next due\"s columns\n          const addFormulasLastDoneNextDues = async function(newSheet) {\n            const usedRange = newSheet.getUsedRange();\n            usedRange.load(\"values\");\n            usedRange.load(\"rowCount\");\n            await context.sync();\n            \n            const taskDateDataColumnName = `${self.getColumnNameFromNumber(usedRange.values[5].indexOf(\"Remarks:\") + 8)}`;\n            const taskFhDataColumnName = `${self.getColumnNameFromNumber(usedRange.values[5].indexOf(\"Remarks:\") + 9)}`;\n            const taskFcDataColumnName = `${self.getColumnNameFromNumber(usedRange.values[5].indexOf(\"Remarks:\") + 10)}`;\n            const taskReferToDataColumnName = `${self.getColumnNameFromNumber(usedRange.values[5].indexOf(\"Remarks:\") + 12)}`;\n            const taskDateDaysDataColumnName = `${self.getColumnNameFromNumber(usedRange.values[5].indexOf(\"Remarks:\") + 17)}`;\n            const taskDateMonthsDataColumnName = `${self.getColumnNameFromNumber(usedRange.values[5].indexOf(\"Remarks:\") + 18)}`;\n            const taskDateYearsDataColumnName = `${self.getColumnNameFromNumber(usedRange.values[5].indexOf(\"Remarks:\") + 19)}`;\n            for(let i=7; i<=usedRange.rowCount; i++) {\n              // Last Done\n              newSheet.getRange(`AE${i}`).formulas = [[`=IF(${taskReferToDataColumnName}${i}=\"\",IF(${taskDateDataColumnName}${i}=\"\",\"-\",IF(${taskDateDaysDataColumnName}${i}<10,\"0\"&${taskDateDaysDataColumnName}${i},${taskDateDaysDataColumnName}${i})&\"-\"&${taskDateMonthsDataColumnName}${i}&\"-\"&${taskDateYearsDataColumnName}${i}),${taskReferToDataColumnName}${i})`]];\n              newSheet.getRange(`AF${i}`).formulas = [[`=IF(${taskReferToDataColumnName}${i}=\"\",${taskFhDataColumnName}${i},${taskReferToDataColumnName}${i})`]];\n              newSheet.getRange(`AG${i}`).formulas = [[`=IF(${taskReferToDataColumnName}${i}=\"\",${taskFcDataColumnName}${i},${taskReferToDataColumnName}${i})`]];\n              \n              // Next Due not sampled\n              newSheet.getRange(`AH${i}`).formulas = [[`=IF(${taskReferToDataColumnName}${i}=\"\",IF(Z${i}=\"\",\"A/C not sampled\",IF(OR($U${i}=\"\",AF${i}<>0),IF(AB${i}<>\"\",IF(RIGHT(AA${i},2)=\"YE\",IF(${taskDateDaysDataColumnName}${i}<10,\"0\"&${taskDateDaysDataColumnName}${i},${taskDateDaysDataColumnName}${i})&\"-\"&${taskDateMonthsDataColumnName}${i}&\"-\"&${taskDateYearsDataColumnName}${i}+AB${i}/365.25,IF(RIGHT(AA${i},2)=\"MO\",IF(${taskDateDaysDataColumnName}${i}<10,\"0\"&${taskDateDaysDataColumnName}${i},${taskDateDaysDataColumnName}${i})&\"-\"&IF(MOD(${taskDateMonthsDataColumnName}${i}+ROUND(AB${i}/(365.25/12),0),12)=0,12,MOD(${taskDateMonthsDataColumnName}${i}+ROUND(AB${i}/(365.25/12),0),12))&\"-\"&(${taskDateYearsDataColumnName}${i}+TRUNC((${taskDateMonthsDataColumnName}${i}+ROUND(AB${i}/(365.25/12),0)-1)/12)),\"add the sum in days(big formula)\")),\"-\"),IF(W${i}<>\"\",IF(RIGHT(V${i},2)=\"YE\",IF(${taskDateDaysDataColumnName}${i}<10,\"0\"&${taskDateDaysDataColumnName}${i},${taskDateDaysDataColumnName}${i})&\"-\"&${taskDateMonthsDataColumnName}${i}&\"-\"&${taskDateYearsDataColumnName}${i}+W${i}/365.25,IF(RIGHT(V${i},2)=\"MO\",IF(${taskDateDaysDataColumnName}${i}<10,\"0\"&${taskDateDaysDataColumnName}${i},${taskDateDaysDataColumnName}${i})&\"-\"&IF(MOD(${taskDateMonthsDataColumnName}${i}+ROUND(AB${i}/(365.25/12),0),12)=0,12,MOD(${taskDateMonthsDataColumnName}${i}+ROUND(AB${i}/(365.25/12),0),12))&\"-\"&(${taskDateYearsDataColumnName}${i}+TRUNC((${taskDateMonthsDataColumnName}${i}+ROUND(AB${i}/(365.25/12),0)-1)/12)),\"add the sum in days(big formula)\")),\"-\"))),${taskReferToDataColumnName}${i})`]];\n              newSheet.getRange(`AI${i}`).formulas = [[`=IF(${taskReferToDataColumnName}${i}=\"\",IF(Z${i}=\"\",\"A/C not sampled\",IF(OR(U${i}=\"\",AF${i}<>0),IF(AC${i}<>\"\",AF${i}+AC${i},\"-\"),IF(X${i}<>\"\",X${i},\"-\"))),${taskReferToDataColumnName}${i})`]];\n              newSheet.getRange(`AJ${i}`).formulas = [[`=IF(${taskReferToDataColumnName}${i}=\"\",IF(Z${i}=\"\",\"A/C not sampled\",IF(OR(U${i}=\"\",AG${i}<>0),IF(AD${i}<>\"\",AG${i}+AD${i},\"-\"),IF(Y${i}<>\"\",Y${i},\"-\"))),${taskReferToDataColumnName}${i})`]];\n            }\n          }\n\n          // Give style to all remaining cells\n          const styleRemainingCells = async function(newSheet) {\n            const usedRange = newSheet.getUsedRange();\n            usedRange.load(\"values\")\n            usedRange.load(\"rowCount\");\n            await context.sync();\n\n            // Get position of last column of table\n            const headerRowNumber = 6;\n            const remarksColumnNumber = usedRange.values[headerRowNumber-1].indexOf(\"Remarks:\");\n            const remarksColumnName = self.getColumnNameFromNumber(remarksColumnNumber);\n\n            // Style the header merged rows\n            // Declare all variables to make code easier inside switch blocks;\n            const statusSelectedColumnNumber = usedRange.values[0].indexOf(\"Status selected:\");\n            const elementInfoAddress = `${self.getColumnNameFromNumber(statusSelectedColumnNumber+1)}${1}`;\n            const titleInfoColumnName = `${self.getColumnNameFromNumber(statusSelectedColumnNumber+17)}`;\n            \n            // Declare and run the corresponding actions for each range block \n            [{range: `C1:${remarksColumnName}1`, description: `main title`}, \n            {range: `C2:${remarksColumnName}2`, description: `second title`},\n            {range: `C3:${remarksColumnName}3`, description: `parameters`},\n            {range: `C4:Z5`, description: `notes`},\n            {range: `${self.getColumnNameFromNumber(usedRange.values[headerRowNumber-1].indexOf(\"TCI\"))}4:${remarksColumnName}4`, description: `FH and FC information`},\n            {range: `${self.getColumnNameFromNumber(remarksColumnNumber+7)}5:${self.getColumnNameFromNumber(remarksColumnNumber+10)}5`, description: \"Last due\"}].forEach(async x => {\n              const range = newSheet.getRange(x.range);\n              range.merge();\n              switch(x.description) { // For each range of cells, style it as corresponding\n                case \"main title\":\n                  range.format.fill.color = \"yellow\";\n                  range.format.font.name = \"CorpoS\";\n                  range.format.font.size = 24;\n                  range.format.font.bold = true;\n                  range.format.verticalAlignment = \"Center\";\n                  range.format.horizontalAlignment = \"Center\";\n                  newSheet.getRange(`C1`).formulas = [[`=IF(\"Airframe\"=${elementInfoAddress},${titleInfoColumnName}1,IF(\"Engine 1\"=${elementInfoAddress},${titleInfoColumnName}2,IF(\"Engine 2\"=${elementInfoAddress},${titleInfoColumnName}3,IF(\"Engine 3\"=${elementInfoAddress},${titleInfoColumnName}4,IF(\"Engine 4\"=${elementInfoAddress},${titleInfoColumnName}5,IF(\"APU\"=${elementInfoAddress},${titleInfoColumnName}6,\"\"))))))`]];\n                  break;\n                case \"second title\":\n                  range.format.fill.color = \"yellow\";\n                  range.format.font.name = \"CorpoS\";\n                  range.format.font.size = 16;\n                  range.format.font.bold = true;\n                  range.format.verticalAlignment = \"Center\";\n                  range.format.horizontalAlignment = \"Center\";\n                  newSheet.getRange(`C2`).values = [[`To be filled with the info in the TOC sheet`]];\n                  break;\n                case \"parameters\":\n                  range.format.fill.color = \"yellow\";\n                  range.format.font.name = \"CorpoS\";\n                  range.format.font.size = 12;\n                  range.format.font.bold = true;\n                  range.format.verticalAlignment = \"Center\";\n                  range.format.horizontalAlignment = \"Center\";\n                  newSheet.getRange(`C3`).formulas = [[`=IF(\"Airframe\"=${elementInfoAddress},${self.getColumnNameFromNumber(statusSelectedColumnNumber+12)}1&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+13)}1&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+14)}1&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+16)}1,IF(\"Engine 1\"=${elementInfoAddress},${self.getColumnNameFromNumber(statusSelectedColumnNumber+12)}2&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+13)}2&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+14)}2&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+15)}2&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+16)}2,IF(\"Engine 2\"=${elementInfoAddress},${self.getColumnNameFromNumber(statusSelectedColumnNumber+12)}3&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+13)}3&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+14)}3&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+15)}3&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+16)}3,IF(\"Engine 3\"=${elementInfoAddress},${self.getColumnNameFromNumber(statusSelectedColumnNumber+12)}4&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+13)}4&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+14)}4&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+15)}4&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+16)}4,IF(\"Engine 4\"=${elementInfoAddress},${self.getColumnNameFromNumber(statusSelectedColumnNumber+12)}5&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+13)}5&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+14)}5&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+15)}5&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+16)}5,IF(\"APU\"=${elementInfoAddress},${self.getColumnNameFromNumber(statusSelectedColumnNumber+12)}6&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+13)}6&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+14)}6&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+15)}6&\"                          \"&${self.getColumnNameFromNumber(statusSelectedColumnNumber+16)}6,\"\"))))))`]];\n                  break;\n                case \"notes\":\n                  range.format.fill.color = \"yellow\";\n                  range.format.font.name = \"Arial\";\n                  range.format.font.color = \"red\";\n                  range.format.font.size = 14;\n                  range.format.font.bold = true;\n                  range.format.verticalAlignment = \"Top\";\n                  range.format.horizontalAlignment = \"Left\";\n                  range.format.wrapText = true;\n                  newSheet.getRange(`C4`).values = [[`Tasks will be performed as per work order WD XXXX Issue X (not yet released)\nNOTE 1: Sampling Tasks are not applicable whilst the aircraft is managed under the Airbus CAMO but Next Due is taken into account from previous operator for the utilisation of the next operator. For Sampling tasks having 100% requirement (Threshold and/or Interval), the next due is equal to the 100% value.\nOR NOTE: Tasks performed as per AIB Work Order N° WD1xxxxxx Issue x.\nOMP tasks up to interval 12MO / 1500FH / 100FC are listed on  maintenance status + Tasks with last perform post EIS.`]];\n                  break;\n                case \"FH and FC information\":\n                  range.format.font.name = \"Arial\";\n                  range.format.font.size = 14;\n                  range.format.font.bold = true;\n                  range.format.verticalAlignment = \"Top\";\n                  range.format.horizontalAlignment = \"Left\";\n                  range.format.wrapText = true;\n                  newSheet.getRange(`${self.getColumnNameFromNumber(usedRange.values[headerRowNumber-1].indexOf(\"TCI\"))}4`).formulas = [[`=IF(OR(\"Airframe\"=${elementInfoAddress}, \"\"=${elementInfoAddress}),\"\",\"If not otherwise specified in the remarks column, the FH & FC provided in the LAST DONE / NEXT DUE columns are in airframe FH & FC.\")`]];\n                  break;\n              }\n            });\n\n            // Style the \"Remarks\" added column\n            // Style the header\n            const remarkHeaderCell = newSheet.getRange(`${remarksColumnName}${headerRowNumber}`);\n            remarkHeaderCell.format.fill.color = \"lightgrey\";\n            remarkHeaderCell.format.font.bold = true;\n            remarkHeaderCell.format.font.name = \"Arial\";\n            remarkHeaderCell.format.font.IFze = 10;\n            remarkHeaderCell.format.verticalAlignment = \"Center\";\n            remarkHeaderCell.format.horizontalAlignment = \"Center\";\n            remarkHeaderCell.format.wrapText = true;\n            remarkHeaderCell.format.borders.getItem(\"EdgeLeft\").weight = \"Medium\";\n            remarkHeaderCell.format.borders.getItem(\"EdgeTop\").weight = \"Medium\";\n            remarkHeaderCell.format.borders.getItem(\"EdgeRight\").weight = \"Medium\";\n            remarkHeaderCell.format.borders.getItem(\"EdgeBottom\").weight = \"Medium\";\n\n            // Style the whole column\n            const remarksColumnRange = newSheet.getRange(`${remarksColumnName}${headerRowNumber+1}:${remarksColumnName}${usedRange.rowCount}`);\n            remarksColumnRange.format.font.name = \"OCRBLetM\";\n            remarksColumnRange.format.font.size = 10;\n            remarksColumnRange.format.borders.getItem(\"EdgeLeft\").weight = \"Medium\";\n            remarksColumnRange.format.borders.getItem(\"EdgeTop\").weight = \"Medium\";\n            remarksColumnRange.format.borders.getItem(\"EdgeRight\").weight = \"Medium\";\n            remarksColumnRange.format.borders.getItem(\"EdgeBottom\").weight = \"Medium\";\n            for(let i=0; i<usedRange.rowCount-headerRowNumber; i++) {\n              const cell = remarksColumnRange.getCell(i, 0);\n              if(i !== 0) cell.format.borders.getItem(\"EdgeTop\").weight = \"Thin\";\n              if(i !== usedRange.rowCount-headerRowNumber-1) cell.format.borders.getItem(\"EdgeBottom\").weight = \"Thin\";\n            }\n\n\n\n\n            for(let i=0; i<usedRange.rowCount; i++) {\n              2\n            }\n          };\n\n\n          await addRemainingHeaderRows(this.newSheet);\n          await stylingNewTableHeaderRow(this.newSheet);\n          await changeFrozenHeaderRows(this.newSheet);\n          await insertRemainingColumns(this.newSheet, this.sampleThresholdColumn, optimized);\n          await insertHeaderNames(this.newSheet, optimized);\n          await addValuesThresholdIntervalColumns(this.newSheet);\n          await setUpRightSideParameters(this.newSheet);\n          await addFormulasLastDoneNextDues(this.newSheet);\n          await styleRemainingCells(this.newSheet);\n\n          \n          // stylingNewTableHeaderRow;\n          // changeFrozenHeaderRows;\n          // insertRemainingColumns;\n          // insertHeaderNames;\n          // addValuesThresholdIntervalColumns;\n          // setUpRightSideParameters;\n          // addFormulasLastDoneNextDues;\n\n\n\n          \n          // newSheet.getRange(\"BV1\").formulas = [['=\"A/C total time: \"&$BF$3']]\n          // newSheet.getRange(\"A2\").formulas = [['=if(2=2, \"Days\", \"no\")']]\n          // newSheet.getRange(\"A3\").dataValidation.rule = {\n          //   list: {\n          //       inCellDropDown: true,\n          //       source: \"TCC,TES,LCL,N/A\"\n          //     }\n          // };\n\n          // await context.sync();\n\n          \n\n\n\n\n\n\n\n\n          \n          // // Create new woorksheet\n          // const myWorkbook = context.workbook;\n          // const originalSheet = myWorkbook.worksheets.getItem(\"OMP\");\n          // const newSheet = myWorkbook.worksheets.add(\"Transformed OMP\");\n          // newSheet.activate();\n          // newSheet.position = 0;\n\n\n          // // Get ranges from original and new worksheet\n          // const usedRange = originalSheet.getUsedRange();\n\n          // usedRange.load(\"address\");\n          // await context.sync();\n\n          // const newRange = newSheet.getRange(\n          //   usedRange.address.split(\"!\")[1].split(\":\").reduce((r, v, i) => {\n          //     if(i === 0) {\n          //       return v+\":\";\n          //     }\n          //     else {\n          //       let j = 0;\n          //       while(!v.slice(j, j+1).match(/\\d/)) {\n          //         j++;\n          //       }\n          //       const newLastRow = Number(v.slice(j)) + this.rowsToAdd;\n          //       return r + v.slice(0, j) + String(newLastRow);\n          //     }\n          //   }, \"\")\n          // );\n\n          // // \n          // usedRange.load(\"values\");\n          // await context.sync();\n\n          // let i = 0;\n          // const newValues = [];\n          // while(i < usedRange.values.length+3) {\n          //   if(i < 5) newValues.push(Array.apply(null, Array(usedRange.values[0].length)).map(() => [\"\"]));\n          //   else newValues.push(usedRange.values[i-3]);\n          //   i++;\n          // }\n\n          // newRange.values = newValues;\n          \n          // const usedRangeFormat = originalSheet.getRange(\"A3:W3\");\n          // const newRangeFormat = newSheet.getRange(\"A6:W6\");\n\n          // usedRangeFormat.load(`format/fill/color,\n          //   format/font/name,\n          //   format/font/color,\n          //   format/font/size,`\n          // );\n          // await context.sync();\n          // // console.log(usedRangeFormat.format);\n          // // newRangeFormat;\n          // newRangeFormat.set(usedRangeFormat);\n\n\n          // newRange.load(\"values\");\n          // await context.sync();\n          // // console.log(newRange.values);\n        });\n      },\n      deleteSheet() {\n        window.Excel.run(async context => {\n          const myWorkbook = context.workbook;\n          const originalSheet = myWorkbook.worksheets.getItem(\"Transformed OMP\");\n          originalSheet.delete();\n        });\n      },\n      test() {\n        window.Excel.run(async context => {\n          // Create a copy from the original MPD/OMP sheet\n          const myWorkbook = context.workbook;\n          const originalSheet = myWorkbook.worksheets.getItem(\"OMP\");\n          const newSheet = originalSheet.copy(\"Beginning\");\n          newSheet.name = \"Transformed OMP\";\n          newSheet.activate();\n          newSheet.position = 0;\n          this.newSheet = newSheet;\n\n\n          newSheet.getRange(\"C1\").formulas = [[`=4+8`]];\n\n          // console.log(range, range.formulas);\n        });\n      },\n    }\n  };\n</script>\n\n<style>\n  .content-header {\n    background: #2a8dd4;\n    color: #fff;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 80px;\n    overflow: hidden;\n  }\n\n  .content-main {\n    background: #fff;\n    position: fixed;\n    top: 80px;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    overflow: auto;\n  }\n\n  .padding {\n    padding: 15px;\n  }\n\n  .btn-container {\n    display: flex;\n    flex-direction: column;\n  }\n</style>\n\n","import { render } from \"./App.vue?vue&type=template&id=5c58119d\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5c58119d&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Sabena Technics Projects\\\\0003 - Applicability tool 2\\\\add-in-mpd-omp-transformer\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\nwindow.Office.onReady(() => {\n    createApp(App).mount('#app');\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkadd_in_mpd_omp_transformer\"] = self[\"webpackChunkadd_in_mpd_omp_transformer\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(2103); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","onClick","_cache","args","$options","test","$event","generateMaster","deleteSheet","name","data","rowsToAdd","sampleThresholdColumn","methods","getColumnNameFromNumber","n","letters","split","result","length","Math","floor","optimized","window","Excel","run","async","self","this","myWorkbook","context","workbook","originalSheet","worksheets","getItem","newSheet","copy","activate","position","addRemainingHeaderRows","rangeToMoveDown","getRange","insert","stylingNewTableHeaderRow","headerRowRange","format","rowHeight","fill","color","changeFrozenHeaderRows","freezePanes","unfreeze","freezeRows","insertRemainingColumns","usedRange","getUsedRange","load","sync","lastColumnLetter","address","match","LastColumnRange","indexOf","slice","values","nextDueColumns","i","index","j","range","getColumn","insertHeaderNames","header","getRow","headerValues","map","x","newHeaderValues","firstColumnLastDue","subHeaderNames","qttSubHeaders","firstColumn","lastColumn","merge","addValuesThresholdIntervalColumns","firstColumnRange","rowCount","newValues","row","push","itemValues","calVarious","filter","includes","String","round","Number","fhValue","fcValue","setUpRightSideParameters","newRange","columnCount","statusDataCell","eisDataCell","acFhDataCell","acFcDataCell","timeInDaysColumnName","timeInMonthsColumnName","timeInYearsColumnName","aircraftDataColumnName","componentsSNDataColumnName","componentsFhDataColumnName","componentsFcDataColumnName","taskReferToDataColumnName","taskDateDataColumnName","newCell","getCell","formulas","dataValidationRange","dataValidation","rule","list","inCellDropDown","source","addFormulasLastDoneNextDues","taskFhDataColumnName","taskFcDataColumnName","taskDateDaysDataColumnName","taskDateMonthsDataColumnName","taskDateYearsDataColumnName","styleRemainingCells","headerRowNumber","remarksColumnNumber","remarksColumnName","statusSelectedColumnNumber","elementInfoAddress","titleInfoColumnName","description","forEach","font","size","bold","verticalAlignment","horizontalAlignment","wrapText","remarkHeaderCell","IFze","borders","weight","remarksColumnRange","cell","delete","__exports__","render","Office","onReady","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}